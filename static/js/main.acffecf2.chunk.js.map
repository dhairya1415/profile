{"version":3,"sources":["components/Header/profile.jpg","components/Header/Header.js","components/Education/Education.js","components/Skills/Skills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","style","height","src","Profile","width","marginRight","href","Education","fontFamily","fontWeight","Skills","App","components_Header_Header","components_Education_Education","Skills_Skills","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acffecf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.a34560c2.jpg\";","import React from \"react\";\r\nimport Profile from \"./profile.jpg\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div style={{ height: \"182px\" }}>\r\n        <img src={Profile} width=\"175px\" height=\"175px\" className=\"image\" />\r\n        <h1 className=\"name\">Dhairya C Shah</h1>\r\n        <h3>2nd Year Computer Engineering Student</h3>\r\n      </div>\r\n      <div className=\"contactdetails\">\r\n        <div className=\"contact\">\r\n          <i className=\"fas fa-phone\" style={{ marginRight: \"8px\" }} />\r\n          +919619861415\r\n        </div>\r\n        <div className=\"email\">\r\n          <i className=\"fas fa-envelope\" style={{ marginRight: \"8px\" }} />\r\n          shahdhairya171099@gmail.com\r\n        </div>\r\n        <a href=\"https://github.com/dhairya1415\" className=\"github\">\r\n          <i className=\"fab fa-github\" style={{ marginRight: \"8px\" }} />\r\n          dhairya1415\r\n        </a>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/dhairya-shah-3153a7151/\"\r\n          className=\"linkedin\"\r\n        >\r\n          <i className=\"fab fa-linkedin-in\" style={{ marginRight: \"8px\" }} />\r\n          Dhairya Shah\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Education.css\";\r\n\r\nconst Education = () => {\r\n  return (\r\n    <div className=\"education\">\r\n      <div className=\"edu\">Education</div>\r\n      <ul className=\"details\" style={{ fontFamily: \"Arial\" }}>\r\n        <li className=\"engg\">\r\n          <p style={{ fontWeight: \"bold\" }}>\r\n            <span className=\"name\">D. J. Sanghvi College of Engineering |</span>\r\n            B.E. Computer Engineering\r\n          </p>\r\n          <p>2017-2021, Vile Parle</p>\r\n          <p>Result: 8.725CGPA</p>\r\n        </li>\r\n        <li className=\"college\">\r\n          <p style={{ fontWeight: \"bold\" }}>\r\n            <span className=\"name\">Pace Junior Science College |</span> HSC\r\n          </p>\r\n          <p>2015-2017, Borivali</p>\r\n          <p>Result: 82%</p>\r\n        </li>\r\n        <li className=\"school\">\r\n          <p style={{ fontWeight: \"bold\" }}>\r\n            <span className=\"name\">\r\n              Swami Vivekanand International School |\r\n            </span>{\" \"}\r\n            SSC\r\n          </p>\r\n          <p>2002-2015, Borivali</p>\r\n          <p>Result: 91.2%</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Education;\r\n","import React from \"react\";\r\nimport \"./Skills.css\";\r\n\r\nexport default function Skills() {\r\n  return (\r\n    <div>\r\n      <div className=\"skills\">\r\n        <div className=\"skill\">Skills</div>\r\n        <p className=\"detail\">C</p>\r\n        <p className=\"detail\">Python</p>\r\n        <p className=\"detail\">HTMl</p>\r\n        <p className=\"detail\">CSS</p>\r\n        <p className=\"detail\">Javascript</p>\r\n        <p className=\"detail\">JQuery</p>\r\n        <p className=\"detail\">React JS</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Education from \"./components/Education/Education\";\nimport Skills from \"./components/Skills/Skills\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Education />\n        <Skills />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}